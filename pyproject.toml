[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tools"
version = "0.0.1"
description = "MLE project"
authors = [
  { name = "Eduardo Cepeda, Ph.D." }
]
license = { file = "LICENSE" }
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License"
]
requires-python = "~=3.12"
dependencies = []

# Add this section to specify packages explicitly
[tool.setuptools.packages.find]
where = ["."]
include = ["aws", "config", "aisuite", "ai_tools", "ai_prompts", "async_tasks", "excel_tools"]

[tool.black]
line-length = 99
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/(
  (\.eggs|\.git|\.hg|\.mypy_cache|\.tox|\.venv|venv|\.env|env|\.vscode|
   _build|buck-out|build|dist|notebooks|references|data)/
)
'''

[tool.isort]
profile = "black"
line_length = 99
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip = [".venv", "venv", "env", "notebooks", "references", "data"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
ignore_missing_imports = true
implicit_reexport = true
exclude = [
    '^\.venv/.*$',
    '^venv/.*$',
    '^env/.*$',
    '^build/.*$',
    '^dist/.*$',
    '^notebooks/.*$',
    '^references/.*$',
    '^data/.*$',
]

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_decorators = false
disallow_untyped_defs = false
